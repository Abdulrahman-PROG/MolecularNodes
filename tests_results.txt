============================= test session starts ==============================
platform linux -- Python 3.10.0, pytest-8.0.2, pluggy-1.4.0 -- /home/russ/Apps/anaconda3/envs/molecularnodes/bin/python3.10
cachedir: .pytest_cache
rootdir: /home/russ/Scripts/git/MolecularNodes
plugins: cov-4.1.0, snapshot-0.9.0
collecting ... collected 245 items / 1 skipped

tests/test_assembly.py::test_get_transformations[1f2n-pdb] PASSED        [  0%]
tests/test_assembly.py::test_get_transformations[1f2n-cif] PASSED        [  0%]
tests/test_assembly.py::test_get_transformations[1f2n-mmtf] PASSED       [  1%]
tests/test_assembly.py::test_get_transformations[5zng-pdb] PASSED        [  1%]
tests/test_assembly.py::test_get_transformations[5zng-cif] PASSED        [  2%]
tests/test_assembly.py::test_get_transformations[5zng-mmtf] SKIPPED      [  2%]
tests/test_assembly.py::test_get_transformations_cif[1] PASSED           [  2%]
tests/test_assembly.py::test_get_transformations_cif[2] PASSED           [  3%]
tests/test_assembly.py::test_get_transformations_cif[3] PASSED           [  3%]
tests/test_assembly.py::test_get_transformations_cif[4] PASSED           [  4%]
tests/test_assembly.py::test_get_transformations_cif[5] PASSED           [  4%]
tests/test_attributes.py::test_attribute[4ozs-pdb] FAILED                [  4%]
tests/test_attributes.py::test_attribute[4ozs-mmtf] PASSED               [  5%]
tests/test_attributes.py::test_attribute[4ozs-cif] FAILED                [  5%]
tests/test_attributes.py::test_attribute[8H1B-pdb] FAILED                [  6%]
tests/test_attributes.py::test_attribute[8H1B-mmtf] PASSED               [  6%]
tests/test_attributes.py::test_attribute[8H1B-cif] FAILED                [  6%]
tests/test_attributes.py::test_attribute[1BNA-pdb] FAILED                [  7%]
tests/test_attributes.py::test_attribute[1BNA-mmtf] PASSED               [  7%]
tests/test_attributes.py::test_attribute[1BNA-cif] FAILED                [  8%]
tests/test_attributes.py::test_attribute[8U8W-pdb] FAILED                [  8%]
tests/test_attributes.py::test_attribute[8U8W-mmtf] FAILED               [  8%]
tests/test_attributes.py::test_attribute[8U8W-cif] FAILED                [  9%]
tests/test_cellpack.py::test_load_cellpack[bcif] PASSED                  [  9%]
tests/test_cellpack.py::test_load_cellpack[cif] PASSED                   [ 10%]
tests/test_coll.py::test_coll PASSED                                     [ 10%]
tests/test_color.py::test_random_rgb PASSED                              [ 11%]
tests/test_color.py::test_colos_from_atomic_numbers PASSED               [ 11%]
tests/test_dna.py::test_read_topology PASSED                             [ 11%]
tests/test_dna.py::test_topology_to_idx PASSED                           [ 12%]
tests/test_dna.py::test_base_lookup PASSED                               [ 12%]
tests/test_dna.py::test_read_trajectory PASSED                           [ 13%]
tests/test_dna.py::test_read_oxdna PASSED                                [ 13%]
tests/test_download.py::test_compare_biotite[cif] PASSED                 [ 13%]
tests/test_download.py::test_compare_biotite[mmtf] PASSED                [ 14%]
tests/test_download.py::test_compare_biotite[pdb] PASSED                 [ 14%]
tests/test_download.py::test_fetch_with_cache[pdb-rcsb-4ozs] PASSED      [ 15%]
tests/test_download.py::test_fetch_with_cache[pdb-rcsb-8H1B] PASSED      [ 15%]
tests/test_download.py::test_fetch_with_cache[pdb-rcsb-1BNA] PASSED      [ 15%]
tests/test_download.py::test_fetch_with_cache[pdb-rcsb-8U8W] PASSED      [ 16%]
tests/test_download.py::test_fetch_with_cache[cif-rcsb-4ozs] PASSED      [ 16%]
tests/test_download.py::test_fetch_with_cache[cif-rcsb-8H1B] PASSED      [ 17%]
tests/test_download.py::test_fetch_with_cache[cif-rcsb-1BNA] PASSED      [ 17%]
tests/test_download.py::test_fetch_with_cache[cif-rcsb-8U8W] PASSED      [ 17%]
tests/test_download.py::test_fetch_without_cache[pdb-rcsb-4ozs] PASSED   [ 18%]
tests/test_download.py::test_fetch_without_cache[pdb-rcsb-8H1B] PASSED   [ 18%]
tests/test_download.py::test_fetch_without_cache[pdb-rcsb-1BNA] PASSED   [ 19%]
tests/test_download.py::test_fetch_without_cache[pdb-rcsb-8U8W] PASSED   [ 19%]
tests/test_download.py::test_fetch_without_cache[cif-rcsb-4ozs] PASSED   [ 20%]
tests/test_download.py::test_fetch_without_cache[cif-rcsb-8H1B] PASSED   [ 20%]
tests/test_download.py::test_fetch_without_cache[cif-rcsb-1BNA] PASSED   [ 20%]
tests/test_download.py::test_fetch_without_cache[cif-rcsb-8U8W] PASSED   [ 21%]
tests/test_download.py::test_fetch_with_invalid_format[rcsb] PASSED      [ 21%]
tests/test_download.py::test_fetch_with_binary_format[bcif-rcsb-4ozs] PASSED [ 22%]
tests/test_download.py::test_fetch_with_binary_format[bcif-rcsb-8H1B] PASSED [ 22%]
tests/test_download.py::test_fetch_with_binary_format[bcif-rcsb-1BNA] PASSED [ 22%]
tests/test_download.py::test_fetch_with_binary_format[bcif-rcsb-8U8W] PASSED [ 23%]
tests/test_download.py::test_fetch_with_binary_format[mmtf-rcsb-4ozs] PASSED [ 23%]
tests/test_download.py::test_fetch_with_binary_format[mmtf-rcsb-8H1B] PASSED [ 24%]
tests/test_download.py::test_fetch_with_binary_format[mmtf-rcsb-1BNA] PASSED [ 24%]
tests/test_download.py::test_fetch_with_binary_format[mmtf-rcsb-8U8W] PASSED [ 24%]
tests/test_download.py::test_alphafold_download[A0A5E8G9H8-cif] PASSED   [ 25%]
tests/test_download.py::test_alphafold_download[A0A5E8G9H8-pdb] PASSED   [ 25%]
tests/test_download.py::test_alphafold_download[A0A5E8G9T8-cif] PASSED   [ 26%]
tests/test_download.py::test_alphafold_download[A0A5E8G9T8-pdb] PASSED   [ 26%]
tests/test_download.py::test_alphafold_download[K4PA18-cif] PASSED       [ 26%]
tests/test_download.py::test_alphafold_download[K4PA18-pdb] PASSED       [ 27%]
tests/test_load.py::test_style_1[False-4ozs-preset_1] PASSED             [ 27%]
tests/test_load.py::test_style_1[False-4ozs-cartoon] PASSED              [ 28%]
tests/test_load.py::test_style_1[False-4ozs-ribbon] PASSED               [ 28%]
tests/test_load.py::test_style_1[False-4ozs-spheres] PASSED              [ 28%]
tests/test_load.py::test_style_1[False-4ozs-surface] PASSED              [ 29%]
tests/test_load.py::test_style_1[False-4ozs-ball_and_stick] PASSED       [ 29%]
tests/test_load.py::test_style_1[False-8H1B-preset_1] PASSED             [ 30%]
tests/test_load.py::test_style_1[False-8H1B-cartoon] PASSED              [ 30%]
tests/test_load.py::test_style_1[False-8H1B-ribbon] PASSED               [ 31%]
tests/test_load.py::test_style_1[False-8H1B-spheres] PASSED              [ 31%]
tests/test_load.py::test_style_1[False-8H1B-surface] PASSED              [ 31%]
tests/test_load.py::test_style_1[False-8H1B-ball_and_stick] PASSED       [ 32%]
tests/test_load.py::test_style_1[False-1BNA-preset_1] PASSED             [ 32%]
tests/test_load.py::test_style_1[False-1BNA-cartoon] PASSED              [ 33%]
tests/test_load.py::test_style_1[False-1BNA-ribbon] PASSED               [ 33%]
tests/test_load.py::test_style_1[False-1BNA-spheres] PASSED              [ 33%]
tests/test_load.py::test_style_1[False-1BNA-surface] PASSED              [ 34%]
tests/test_load.py::test_style_1[False-1BNA-ball_and_stick] PASSED       [ 34%]
tests/test_load.py::test_style_1[False-8U8W-preset_1] FAILED             [ 35%]
tests/test_load.py::test_style_1[False-8U8W-cartoon] FAILED              [ 35%]
tests/test_load.py::test_style_1[False-8U8W-ribbon] FAILED               [ 35%]
tests/test_load.py::test_style_1[False-8U8W-spheres] FAILED              [ 36%]
tests/test_load.py::test_style_1[False-8U8W-surface] FAILED              [ 36%]
tests/test_load.py::test_style_1[False-8U8W-ball_and_stick] FAILED       [ 37%]
tests/test_load.py::test_style_2[True-4ozs-cartoon] PASSED               [ 37%]
tests/test_load.py::test_style_2[True-4ozs-surface] PASSED               [ 37%]
tests/test_load.py::test_style_2[True-4ozs-ribbon] PASSED                [ 38%]
tests/test_load.py::test_style_2[True-8H1B-cartoon] PASSED               [ 38%]
tests/test_load.py::test_style_2[True-8H1B-surface] PASSED               [ 39%]
tests/test_load.py::test_style_2[True-8H1B-ribbon] PASSED                [ 39%]
tests/test_load.py::test_style_2[True-1BNA-cartoon] PASSED               [ 40%]
tests/test_load.py::test_style_2[True-1BNA-surface] PASSED               [ 40%]
tests/test_load.py::test_style_2[True-1BNA-ribbon] PASSED                [ 40%]
tests/test_load.py::test_style_2[True-8U8W-cartoon] FAILED               [ 41%]
tests/test_load.py::test_style_2[True-8U8W-surface] FAILED               [ 41%]
tests/test_load.py::test_style_2[True-8U8W-ribbon] FAILED                [ 42%]
tests/test_load.py::test_download_format[4ozs-mmtf] FAILED               [ 42%]
tests/test_load.py::test_download_format[4ozs-cif] FAILED                [ 42%]
tests/test_load.py::test_download_format[4ozs-pdb] FAILED                [ 43%]
tests/test_load.py::test_download_format[8H1B-mmtf] FAILED               [ 43%]
tests/test_load.py::test_download_format[8H1B-cif] FAILED                [ 44%]
tests/test_load.py::test_download_format[8H1B-pdb] FAILED                [ 44%]
tests/test_load.py::test_download_format[1BNA-mmtf] FAILED               [ 44%]
tests/test_load.py::test_download_format[1BNA-cif] FAILED                [ 45%]
tests/test_load.py::test_download_format[1BNA-pdb] FAILED                [ 45%]
tests/test_load.py::test_download_format[8U8W-mmtf] FAILED               [ 46%]
tests/test_load.py::test_download_format[8U8W-cif] FAILED                [ 46%]
tests/test_load.py::test_download_format[8U8W-pdb] FAILED                [ 46%]
tests/test_load.py::test_style_positions[4ozs-preset_1] PASSED           [ 47%]
tests/test_load.py::test_style_positions[4ozs-cartoon] PASSED            [ 47%]
tests/test_load.py::test_style_positions[4ozs-ribbon] PASSED             [ 48%]
tests/test_load.py::test_style_positions[4ozs-spheres] PASSED            [ 48%]
tests/test_load.py::test_style_positions[4ozs-surface] PASSED            [ 48%]
tests/test_load.py::test_style_positions[4ozs-ball_and_stick] PASSED     [ 49%]
tests/test_load.py::test_style_positions[8H1B-preset_1] PASSED           [ 49%]
tests/test_load.py::test_style_positions[8H1B-cartoon] PASSED            [ 50%]
tests/test_load.py::test_style_positions[8H1B-ribbon] PASSED             [ 50%]
tests/test_load.py::test_style_positions[8H1B-spheres] PASSED            [ 51%]
tests/test_load.py::test_style_positions[8H1B-surface] PASSED            [ 51%]
tests/test_load.py::test_style_positions[8H1B-ball_and_stick] PASSED     [ 51%]
tests/test_load.py::test_style_positions[1BNA-preset_1] PASSED           [ 52%]
tests/test_load.py::test_style_positions[1BNA-cartoon] PASSED            [ 52%]
tests/test_load.py::test_style_positions[1BNA-ribbon] PASSED             [ 53%]
tests/test_load.py::test_style_positions[1BNA-spheres] PASSED            [ 53%]
tests/test_load.py::test_style_positions[1BNA-surface] PASSED            [ 53%]
tests/test_load.py::test_style_positions[1BNA-ball_and_stick] PASSED     [ 54%]
tests/test_load.py::test_style_positions[8U8W-preset_1] PASSED           [ 54%]
tests/test_load.py::test_style_positions[8U8W-cartoon] PASSED            [ 55%]
tests/test_load.py::test_style_positions[8U8W-ribbon] PASSED             [ 55%]
tests/test_load.py::test_style_positions[8U8W-spheres] PASSED            [ 55%]
tests/test_load.py::test_style_positions[8U8W-surface] FAILED            [ 56%]
tests/test_load.py::test_style_positions[8U8W-ball_and_stick] PASSED     [ 56%]
tests/test_load.py::test_local_pdb PASSED                                [ 57%]
tests/test_load.py::test_rcsb_nmr PASSED                                 [ 57%]
tests/test_load.py::test_load_small_mol PASSED                           [ 57%]
tests/test_load.py::test_rcsb_cache PASSED                               [ 58%]
tests/test_mda.py::TestMDA::test_persistent_handlers_added PASSED        [ 58%]
tests/test_mda.py::TestMDA::test_create_mda_session PASSED               [ 59%]
tests/test_mda.py::TestMDA::test_show_universe[False] PASSED             [ 59%]
tests/test_mda.py::TestMDA::test_show_universe[True] PASSED              [ 60%]
tests/test_mda.py::TestMDA::test_same_name_atoms[False] PASSED           [ 60%]
tests/test_mda.py::TestMDA::test_same_name_atoms[True] PASSED            [ 60%]
tests/test_mda.py::TestMDA::test_show_multiple_selection[False] PASSED   [ 61%]
tests/test_mda.py::TestMDA::test_show_multiple_selection[True] PASSED    [ 61%]
tests/test_mda.py::TestMDA::test_include_bonds[False] PASSED             [ 62%]
tests/test_mda.py::TestMDA::test_include_bonds[True] PASSED              [ 62%]
tests/test_mda.py::TestMDA::test_attributes_added[False] PASSED          [ 62%]
tests/test_mda.py::TestMDA::test_attributes_added[True] PASSED           [ 63%]
tests/test_mda.py::TestMDA::test_trajectory_update[False] PASSED         [ 63%]
tests/test_mda.py::TestMDA::test_trajectory_update[True] PASSED          [ 64%]
tests/test_mda.py::TestMDA::test_show_updated_atoms[False] PASSED        [ 64%]
tests/test_mda.py::TestMDA::test_show_updated_atoms[True] PASSED         [ 64%]
tests/test_mda.py::TestMDA::test_update_deleted_objects[False] PASSED    [ 65%]
tests/test_mda.py::TestMDA::test_update_deleted_objects[True] PASSED     [ 65%]
tests/test_mda.py::TestMDA::test_save_persistance[False] PASSED          [ 66%]
tests/test_mda.py::TestMDA::test_save_persistance[True] PASSED           [ 66%]
tests/test_mda.py::TestMDA_FrameMapping::test_persistent_handlers_added PASSED [ 66%]
tests/test_mda.py::TestMDA_FrameMapping::test_create_mda_session PASSED  [ 67%]
tests/test_mda.py::TestMDA_FrameMapping::test_frame_mapping PASSED       [ 67%]
tests/test_mda.py::TestMDA_FrameMapping::test_subframes PASSED           [ 68%]
tests/test_mda.py::TestMDA_FrameMapping::test_subframe_mapping PASSED    [ 68%]
tests/test_mda.py::test_martini[pent/prot_ion.tpr] FAILED                [ 68%]
tests/test_mda.py::test_martini[pent/TOPOL2.pdb] FAILED                  [ 69%]
tests/test_mol_sdf.py::test_open[mol] PASSED                             [ 69%]
tests/test_mol_sdf.py::test_open[sdf] PASSED                             [ 70%]
tests/test_mol_sdf.py::test_load[ball_and_stick-mol] FAILED              [ 70%]
tests/test_mol_sdf.py::test_load[ball_and_stick-sdf] FAILED              [ 71%]
tests/test_mol_sdf.py::test_load[spheres-mol] FAILED                     [ 71%]
tests/test_mol_sdf.py::test_load[spheres-sdf] FAILED                     [ 71%]
tests/test_mol_sdf.py::test_load[surface-mol] PASSED                     [ 72%]
tests/test_mol_sdf.py::test_load[surface-sdf] PASSED                     [ 72%]
tests/test_nodes.py::test_node_name_format PASSED                        [ 73%]
tests/test_nodes.py::test_get_nodes PASSED                               [ 73%]
tests/test_nodes.py::test_selection PASSED                               [ 73%]
tests/test_nodes.py::test_selection_working[chain_id-mmtf-4ozs] PASSED   [ 74%]
tests/test_nodes.py::test_selection_working[chain_id-mmtf-8H1B] PASSED   [ 74%]
tests/test_nodes.py::test_selection_working[chain_id-mmtf-1BNA] PASSED   [ 75%]
tests/test_nodes.py::test_selection_working[chain_id-mmtf-8U8W] PASSED   [ 75%]
tests/test_nodes.py::test_selection_working[chain_id-cif-4ozs] PASSED    [ 75%]
tests/test_nodes.py::test_selection_working[chain_id-cif-8H1B] PASSED    [ 76%]
tests/test_nodes.py::test_selection_working[chain_id-cif-1BNA] PASSED    [ 76%]
tests/test_nodes.py::test_selection_working[chain_id-cif-8U8W] PASSED    [ 77%]
tests/test_nodes.py::test_selection_working[entity_id-mmtf-4ozs] PASSED  [ 77%]
tests/test_nodes.py::test_selection_working[entity_id-mmtf-8H1B] PASSED  [ 77%]
tests/test_nodes.py::test_selection_working[entity_id-mmtf-1BNA] PASSED  [ 78%]
tests/test_nodes.py::test_selection_working[entity_id-mmtf-8U8W] PASSED  [ 78%]
tests/test_nodes.py::test_selection_working[entity_id-cif-4ozs] PASSED   [ 79%]
tests/test_nodes.py::test_selection_working[entity_id-cif-8H1B] PASSED   [ 79%]
tests/test_nodes.py::test_selection_working[entity_id-cif-1BNA] PASSED   [ 80%]
tests/test_nodes.py::test_selection_working[entity_id-cif-8U8W] PASSED   [ 80%]
tests/test_nodes.py::test_color_custom[chain_id-mmtf-4ozs] PASSED        [ 80%]
tests/test_nodes.py::test_color_custom[chain_id-mmtf-8H1B] PASSED        [ 81%]
tests/test_nodes.py::test_color_custom[chain_id-mmtf-1BNA] PASSED        [ 81%]
tests/test_nodes.py::test_color_custom[chain_id-mmtf-8U8W] PASSED        [ 82%]
tests/test_nodes.py::test_color_custom[chain_id-cif-4ozs] PASSED         [ 82%]
tests/test_nodes.py::test_color_custom[chain_id-cif-8H1B] PASSED         [ 82%]
tests/test_nodes.py::test_color_custom[chain_id-cif-1BNA] PASSED         [ 83%]
tests/test_nodes.py::test_color_custom[chain_id-cif-8U8W] PASSED         [ 83%]
tests/test_nodes.py::test_color_custom[entity_id-mmtf-4ozs] PASSED       [ 84%]
tests/test_nodes.py::test_color_custom[entity_id-mmtf-8H1B] PASSED       [ 84%]
tests/test_nodes.py::test_color_custom[entity_id-mmtf-1BNA] PASSED       [ 84%]
tests/test_nodes.py::test_color_custom[entity_id-mmtf-8U8W] PASSED       [ 85%]
tests/test_nodes.py::test_color_custom[entity_id-cif-4ozs] PASSED        [ 85%]
tests/test_nodes.py::test_color_custom[entity_id-cif-8H1B] PASSED        [ 86%]
tests/test_nodes.py::test_color_custom[entity_id-cif-1BNA] PASSED        [ 86%]
tests/test_nodes.py::test_color_custom[entity_id-cif-8U8W] PASSED        [ 86%]
tests/test_nodes.py::test_custom_resid_selection PASSED                  [ 87%]
tests/test_nodes.py::test_op_custom_color PASSED                         [ 87%]
tests/test_nodes.py::test_color_chain PASSED                             [ 88%]
tests/test_nodes.py::test_color_entity PASSED                            [ 88%]
tests/test_nodes.py::test_change_style PASSED                            [ 88%]
tests/test_nodes.py::test_node_topology PASSED                           [ 89%]
tests/test_nodes.py::test_compute_backbone PASSED                        [ 89%]
tests/test_nodes.py::test_topo_bonds PASSED                              [ 90%]
tests/test_obj.py::test_creat_obj PASSED                                 [ 90%]
tests/test_obj.py::test_set_position PASSED                              [ 91%]
tests/test_obj.py::test_eval_mesh PASSED                                 [ 91%]
tests/test_ops.py::test_op_api_cartoon[4ozs] FAILED                      [ 91%]
tests/test_ops.py::test_op_api_cartoon[8H1B] FAILED                      [ 92%]
tests/test_ops.py::test_op_api_cartoon[1BNA] FAILED                      [ 92%]
tests/test_ops.py::test_op_api_cartoon[8U8W] FAILED                      [ 93%]
tests/test_ops.py::test_op_api_mda FAILED                                [ 93%]
tests/test_parse.py::test_mmtf_init PASSED                               [ 93%]
tests/test_parse.py::test_mmtf_read PASSED                               [ 94%]
tests/test_parse.py::test_mmtf_get_structure PASSED                      [ 94%]
tests/test_parse.py::test_mmtf_assemblies PASSED                         [ 95%]
tests/test_parse.py::test_mmtf_entity_ids PASSED                         [ 95%]
tests/test_pdbx.py::test_ss_label_to_int PASSED                          [ 95%]
tests/test_pdbx.py::test_get_ss_from_mmcif PASSED                        [ 96%]
tests/test_pkg.py::test_name_versions PASSED                             [ 96%]
tests/test_pkg.py::test_is_current PASSED                                [ 97%]
tests/test_pkg.py::test_get_pkgs PASSED                                  [ 97%]
tests/test_select.py::test_select_multiple_residues[selection0] PASSED   [ 97%]
tests/test_select.py::test_select_multiple_residues[selection1] PASSED   [ 98%]
tests/test_select.py::test_select_multiple_residues[selection2] PASSED   [ 98%]
tests/test_setup.py::test_template PASSED                                [ 99%]
tests/test_star.py::test_starfile_attributes[cistem] PASSED              [ 99%]
tests/test_star.py::test_starfile_attributes[relion] PASSED              [100%]

=================================== FAILURES ===================================
___________________________ test_attribute[4ozs-pdb] ___________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fe1b33f1c0>
code = '4ozs', format = 'pdb'

    @pytest.mark.parametrize("code, format", itertools.product(codes, formats))
    def test_attribute(snapshot, code, format):
        mol = mn.io.fetch(code, cache_dir=temp_dir, style=None, format=format)
        for attribute in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(mol, attribute),
                f"att_{attribute}_values.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_attributes/test_attribute/4ozs-pdb/att_entity_id_values.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == "The selected...'sharp_face']"
E             
E             - The selected attribute 'entity_id' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'vdw_radii', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             + The selected attribute 'entity_id' does not exist on the mesh.             Possible attributes are: attribu...
E             
E             ...Full output truncated (2 lines hidden), use '-vv' to show

tests/test_attributes.py:23: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'entity_id' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'vdw_radii', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute entity_id from <bpy_struct, Object("4ozs") at 0x63e93607d008>
___________________________ test_attribute[4ozs-cif] ___________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fe1b198670>
code = '4ozs', format = 'cif'

    @pytest.mark.parametrize("code, format", itertools.product(codes, formats))
    def test_attribute(snapshot, code, format):
        mol = mn.io.fetch(code, cache_dir=temp_dir, style=None, format=format)
        for attribute in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(mol, attribute),
                f"att_{attribute}_values.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_attributes/test_attribute/4ozs-cif/att_b_factor_values.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == "The selected...'sharp_face']"
E             
E             - The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['vdw_radii', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             + The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['vdw_radii', 'm...
E             
E             ...Full output truncated (2 lines hidden), use '-vv' to show

tests/test_attributes.py:23: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['vdw_radii', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute b_factor from <bpy_struct, Object("4ozs.002") at 0x63e931e98628>
___________________________ test_attribute[8H1B-pdb] ___________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fda9b73b80>
code = '8H1B', format = 'pdb'

    @pytest.mark.parametrize("code, format", itertools.product(codes, formats))
    def test_attribute(snapshot, code, format):
        mol = mn.io.fetch(code, cache_dir=temp_dir, style=None, format=format)
        for attribute in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(mol, attribute),
                f"att_{attribute}_values.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_attributes/test_attribute/8H1B-pdb/att_entity_id_values.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == "The selected...'sharp_face']"
E             
E             - The selected attribute 'entity_id' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'vdw_radii', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             + The selected attribute 'entity_id' does not exist on the mesh.             Possible attributes are: attribu...
E             
E             ...Full output truncated (2 lines hidden), use '-vv' to show

tests/test_attributes.py:23: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'entity_id' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'vdw_radii', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute entity_id from <bpy_struct, Object("8H1B") at 0x63e935f86928>
___________________________ test_attribute[8H1B-cif] ___________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fe1b30d720>
code = '8H1B', format = 'cif'

    @pytest.mark.parametrize("code, format", itertools.product(codes, formats))
    def test_attribute(snapshot, code, format):
        mol = mn.io.fetch(code, cache_dir=temp_dir, style=None, format=format)
        for attribute in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(mol, attribute),
                f"att_{attribute}_values.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_attributes/test_attribute/8H1B-cif/att_b_factor_values.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == "The selected...'sharp_face']"
E             
E             - The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['vdw_radii', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             + The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['vdw_radii', 'm...
E             
E             ...Full output truncated (2 lines hidden), use '-vv' to show

tests/test_attributes.py:23: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['vdw_radii', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute b_factor from <bpy_struct, Object("8H1B.002") at 0x63e935fe2ce8>
___________________________ test_attribute[1BNA-pdb] ___________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fda9b73e50>
code = '1BNA', format = 'pdb'

    @pytest.mark.parametrize("code, format", itertools.product(codes, formats))
    def test_attribute(snapshot, code, format):
        mol = mn.io.fetch(code, cache_dir=temp_dir, style=None, format=format)
        for attribute in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(mol, attribute),
                f"att_{attribute}_values.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_attributes/test_attribute/1BNA-pdb/att_entity_id_values.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == "The selected...'sharp_face']"
E             
E             - The selected attribute 'entity_id' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'vdw_radii', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             + The selected attribute 'entity_id' does not exist on the mesh.             Possible attributes are: attribu...
E             
E             ...Full output truncated (2 lines hidden), use '-vv' to show

tests/test_attributes.py:23: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'entity_id' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'vdw_radii', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute entity_id from <bpy_struct, Object("1BNA") at 0x63e9361b7188>
___________________________ test_attribute[1BNA-cif] ___________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fda9b73e50>
code = '1BNA', format = 'cif'

    @pytest.mark.parametrize("code, format", itertools.product(codes, formats))
    def test_attribute(snapshot, code, format):
        mol = mn.io.fetch(code, cache_dir=temp_dir, style=None, format=format)
        for attribute in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(mol, attribute),
                f"att_{attribute}_values.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_attributes/test_attribute/1BNA-cif/att_b_factor_values.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == "The selected...'sharp_face']"
E             
E             - The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['vdw_radii', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_name', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             + The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['vdw_radii', 'mass', 'lipopho...
E             
E             ...Full output truncated (2 lines hidden), use '-vv' to show

tests/test_attributes.py:23: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['vdw_radii', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_name', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute b_factor from <bpy_struct, Object("1BNA.002") at 0x63e93610abe8>
___________________________ test_attribute[8U8W-pdb] ___________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fe1b169d20>
code = '8U8W', format = 'pdb'

    @pytest.mark.parametrize("code, format", itertools.product(codes, formats))
    def test_attribute(snapshot, code, format):
        mol = mn.io.fetch(code, cache_dir=temp_dir, style=None, format=format)
        for attribute in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(mol, attribute),
                f"att_{attribute}_values.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_attributes/test_attribute/8U8W-pdb/att_vdw_radii_values.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == '[0.017 0.017... 0.017 0.017]'
E             
E             + The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             - [0.017 0.017 0.017 0.017 0.017 0.017 0.017 0.015 0.017 0.017 0.017 0.015
E             -  0.017 0.017 0.015 0.017 0.015 0.017 0...
E             
E             ...Full output truncated (8 lines hidden), use '-vv' to show

tests/test_attributes.py:23: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute vdw_radii from <bpy_struct, Object("8U8W") at 0x63e9360c9bf8>
__________________________ test_attribute[8U8W-mmtf] ___________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fe1b16a2c0>
code = '8U8W', format = 'mmtf'

    @pytest.mark.parametrize("code, format", itertools.product(codes, formats))
    def test_attribute(snapshot, code, format):
        mol = mn.io.fetch(code, cache_dir=temp_dir, style=None, format=format)
        for attribute in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(mol, attribute),
                f"att_{attribute}_values.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_attributes/test_attribute/8U8W-mmtf/att_vdw_radii_values.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == '[0.017 0.017... 0.017 0.017]'
E             
E             + The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             - [0.017 0.017 0.017 0.017 0.017 0.017 0.017 0.015 0.017 0.017 0.017 0.015
E             -  0.017 0.017 0.015 0.017 ...
E             
E             ...Full output truncated (8 lines hidden), use '-vv' to show

tests/test_attributes.py:23: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute vdw_radii from <bpy_struct, Object("8U8W.001") at 0x63e9360b3d68>
___________________________ test_attribute[8U8W-cif] ___________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fe1b33ea70>
code = '8U8W', format = 'cif'

    @pytest.mark.parametrize("code, format", itertools.product(codes, formats))
    def test_attribute(snapshot, code, format):
        mol = mn.io.fetch(code, cache_dir=temp_dir, style=None, format=format)
        for attribute in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(mol, attribute),
                f"att_{attribute}_values.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_attributes/test_attribute/8U8W-cif/att_b_factor_values.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == "The selected...'sharp_face']"
E             
E             - The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['vdw_radii', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             + The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['mass', 'lipoph...
E             
E             ...Full output truncated (1 line hidden), use '-vv' to show

tests/test_attributes.py:23: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute b_factor from <bpy_struct, Object("8U8W.002") at 0x63e936178708>
______________________ test_style_1[False-8U8W-preset_1] _______________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90fd1540>
assembly = False, code = '8U8W', style = 'preset_1'

    @pytest.mark.parametrize("assembly, code, style", itertools.product([False], codes, styles))
    def test_style_1(snapshot, assembly, code, style):
>       useful_function(snapshot, style, code, assembly, cache_dir=temp_dir)

tests/test_load.py:45: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90fd1540>
style = 'preset_1', code = '8U8W', assembly = False
cache_dir = '/tmp/tmphha5xei9'

    def useful_function(snapshot, style, code, assembly, cache_dir=None):
        obj = mn.io.fetch(
            code,
            style=style,
            build_assembly=assembly,
            cache_dir=cache_dir
        ).object
        node = mn.blender.nodes.get_style_node(obj)
    
        if 'EEVEE' in node.inputs.keys():
            node.inputs['EEVEE'].default_value = True
    
        mn.blender.nodes.realize_instances(obj)
        dont_realise = style == 'cartoon' and code == '1BNA'
        for att in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(obj, att, evaluate=dont_realise),
                f"{att}.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_load/test_style_1/False-8U8W-preset_1/vdw_radii.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == '[0.017 0.017... 0.017 0.017]'
E             
E             + The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             - [0.017 0.017 0.017 0.017 0.017 0.017 0.017 0.015 0.017 0.017 0.017 0.015
E             -  0.017 0.017 0.015 0.017 ...
E             
E             ...Full output truncated (8 lines hidden), use '-vv' to show

tests/test_load.py:36: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute vdw_radii from <bpy_struct, Object("8U8W") at 0x63e936f40ab8>
_______________________ test_style_1[False-8U8W-cartoon] _______________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90fd2e60>
assembly = False, code = '8U8W', style = 'cartoon'

    @pytest.mark.parametrize("assembly, code, style", itertools.product([False], codes, styles))
    def test_style_1(snapshot, assembly, code, style):
>       useful_function(snapshot, style, code, assembly, cache_dir=temp_dir)

tests/test_load.py:45: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90fd2e60>
style = 'cartoon', code = '8U8W', assembly = False
cache_dir = '/tmp/tmphha5xei9'

    def useful_function(snapshot, style, code, assembly, cache_dir=None):
        obj = mn.io.fetch(
            code,
            style=style,
            build_assembly=assembly,
            cache_dir=cache_dir
        ).object
        node = mn.blender.nodes.get_style_node(obj)
    
        if 'EEVEE' in node.inputs.keys():
            node.inputs['EEVEE'].default_value = True
    
        mn.blender.nodes.realize_instances(obj)
        dont_realise = style == 'cartoon' and code == '1BNA'
        for att in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(obj, att, evaluate=dont_realise),
                f"{att}.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_load/test_style_1/False-8U8W-cartoon/vdw_radii.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == '[0.017 0.017... 0.017 0.017]'
E             
E             + The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             - [0.017 0.017 0.017 0.017 0.017 0.017 0.017 0.015 0.017 0.017 0.017 0.015
E             -  0.017 0.017 0.015 0.017 ...
E             
E             ...Full output truncated (8 lines hidden), use '-vv' to show

tests/test_load.py:36: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute vdw_radii from <bpy_struct, Object("8U8W.001") at 0x63e93b96b8a8>
_______________________ test_style_1[False-8U8W-ribbon] ________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90fd35e0>
assembly = False, code = '8U8W', style = 'ribbon'

    @pytest.mark.parametrize("assembly, code, style", itertools.product([False], codes, styles))
    def test_style_1(snapshot, assembly, code, style):
>       useful_function(snapshot, style, code, assembly, cache_dir=temp_dir)

tests/test_load.py:45: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90fd35e0>
style = 'ribbon', code = '8U8W', assembly = False
cache_dir = '/tmp/tmphha5xei9'

    def useful_function(snapshot, style, code, assembly, cache_dir=None):
        obj = mn.io.fetch(
            code,
            style=style,
            build_assembly=assembly,
            cache_dir=cache_dir
        ).object
        node = mn.blender.nodes.get_style_node(obj)
    
        if 'EEVEE' in node.inputs.keys():
            node.inputs['EEVEE'].default_value = True
    
        mn.blender.nodes.realize_instances(obj)
        dont_realise = style == 'cartoon' and code == '1BNA'
        for att in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(obj, att, evaluate=dont_realise),
                f"{att}.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_load/test_style_1/False-8U8W-ribbon/vdw_radii.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == '[0.017 0.017... 0.017 0.017]'
E             
E             + The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             - [0.017 0.017 0.017 0.017 0.017 0.017 0.017 0.015 0.017 0.017 0.017 0.015
E             -  0.017 0.017 0.015 0.017 ...
E             
E             ...Full output truncated (8 lines hidden), use '-vv' to show

tests/test_load.py:36: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute vdw_radii from <bpy_struct, Object("8U8W.002") at 0x63e9367b55c8>
_______________________ test_style_1[False-8U8W-spheres] _______________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90fd2b00>
assembly = False, code = '8U8W', style = 'spheres'

    @pytest.mark.parametrize("assembly, code, style", itertools.product([False], codes, styles))
    def test_style_1(snapshot, assembly, code, style):
>       useful_function(snapshot, style, code, assembly, cache_dir=temp_dir)

tests/test_load.py:45: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90fd2b00>
style = 'spheres', code = '8U8W', assembly = False
cache_dir = '/tmp/tmphha5xei9'

    def useful_function(snapshot, style, code, assembly, cache_dir=None):
        obj = mn.io.fetch(
            code,
            style=style,
            build_assembly=assembly,
            cache_dir=cache_dir
        ).object
        node = mn.blender.nodes.get_style_node(obj)
    
        if 'EEVEE' in node.inputs.keys():
            node.inputs['EEVEE'].default_value = True
    
        mn.blender.nodes.realize_instances(obj)
        dont_realise = style == 'cartoon' and code == '1BNA'
        for att in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(obj, att, evaluate=dont_realise),
                f"{att}.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_load/test_style_1/False-8U8W-spheres/vdw_radii.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == '[0.017 0.017... 0.017 0.017]'
E             
E             + The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             - [0.017 0.017 0.017 0.017 0.017 0.017 0.017 0.015 0.017 0.017 0.017 0.015
E             -  0.017 0.017 0.015 0.017 ...
E             
E             ...Full output truncated (8 lines hidden), use '-vv' to show

tests/test_load.py:36: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute vdw_radii from <bpy_struct, Object("8U8W.003") at 0x63e938a00df8>
_______________________ test_style_1[False-8U8W-surface] _______________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90fd07c0>
assembly = False, code = '8U8W', style = 'surface'

    @pytest.mark.parametrize("assembly, code, style", itertools.product([False], codes, styles))
    def test_style_1(snapshot, assembly, code, style):
>       useful_function(snapshot, style, code, assembly, cache_dir=temp_dir)

tests/test_load.py:45: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90fd07c0>
style = 'surface', code = '8U8W', assembly = False
cache_dir = '/tmp/tmphha5xei9'

    def useful_function(snapshot, style, code, assembly, cache_dir=None):
        obj = mn.io.fetch(
            code,
            style=style,
            build_assembly=assembly,
            cache_dir=cache_dir
        ).object
        node = mn.blender.nodes.get_style_node(obj)
    
        if 'EEVEE' in node.inputs.keys():
            node.inputs['EEVEE'].default_value = True
    
        mn.blender.nodes.realize_instances(obj)
        dont_realise = style == 'cartoon' and code == '1BNA'
        for att in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(obj, att, evaluate=dont_realise),
                f"{att}.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_load/test_style_1/False-8U8W-surface/vdw_radii.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == '[0.017 0.017... 0.017 0.017]'
E             
E             + The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             - [0.017 0.017 0.017 0.017 0.017 0.017 0.017 0.015 0.017 0.017 0.017 0.015
E             -  0.017 0.017 0.015 0.017 ...
E             
E             ...Full output truncated (8 lines hidden), use '-vv' to show

tests/test_load.py:36: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute vdw_radii from <bpy_struct, Object("8U8W.004") at 0x63e9389b8768>
___________________ test_style_1[False-8U8W-ball_and_stick] ____________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90ec6620>
assembly = False, code = '8U8W', style = 'ball_and_stick'

    @pytest.mark.parametrize("assembly, code, style", itertools.product([False], codes, styles))
    def test_style_1(snapshot, assembly, code, style):
>       useful_function(snapshot, style, code, assembly, cache_dir=temp_dir)

tests/test_load.py:45: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90ec6620>
style = 'ball_and_stick', code = '8U8W', assembly = False
cache_dir = '/tmp/tmphha5xei9'

    def useful_function(snapshot, style, code, assembly, cache_dir=None):
        obj = mn.io.fetch(
            code,
            style=style,
            build_assembly=assembly,
            cache_dir=cache_dir
        ).object
        node = mn.blender.nodes.get_style_node(obj)
    
        if 'EEVEE' in node.inputs.keys():
            node.inputs['EEVEE'].default_value = True
    
        mn.blender.nodes.realize_instances(obj)
        dont_realise = style == 'cartoon' and code == '1BNA'
        for att in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(obj, att, evaluate=dont_realise),
                f"{att}.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_load/test_style_1/False-8U8W-ball_and_stick/vdw_radii.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == '[0.017 0.017... 0.017 0.017]'
E             
E             + The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             - [0.017 0.017 0.017 0.017 0.017 0.017 0.017 0.015 0.017 0.017 0.017 0.015
E             -  0.017 0.017 0.015 0.017 ...
E             
E             ...Full output truncated (8 lines hidden), use '-vv' to show

tests/test_load.py:36: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute vdw_radii from <bpy_struct, Object("8U8W.005") at 0x63e936f59e28>
_______________________ test_style_2[True-8U8W-cartoon] ________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90f039a0>
assembly = True, code = '8U8W', style = 'cartoon'

    @pytest.mark.parametrize("assembly, code, style", itertools.product([True], codes, ['cartoon', 'surface', 'ribbon']))
    def test_style_2(snapshot, assembly, code, style):
>       useful_function(snapshot, style, code, assembly, cache_dir=temp_dir)

tests/test_load.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90f039a0>
style = 'cartoon', code = '8U8W', assembly = True
cache_dir = '/tmp/tmphha5xei9'

    def useful_function(snapshot, style, code, assembly, cache_dir=None):
        obj = mn.io.fetch(
            code,
            style=style,
            build_assembly=assembly,
            cache_dir=cache_dir
        ).object
        node = mn.blender.nodes.get_style_node(obj)
    
        if 'EEVEE' in node.inputs.keys():
            node.inputs['EEVEE'].default_value = True
    
        mn.blender.nodes.realize_instances(obj)
        dont_realise = style == 'cartoon' and code == '1BNA'
        for att in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(obj, att, evaluate=dont_realise),
                f"{att}.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_load/test_style_2/True-8U8W-cartoon/vdw_radii.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == '[0.017 0.017... 0.017 0.017]'
E             
E             + The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             - [0.017 0.017 0.017 0.017 0.017 0.017 0.017 0.015 0.017 0.017 0.017 0.015
E             -  0.017 0.017 0.015 0.017 ...
E             
E             ...Full output truncated (8 lines hidden), use '-vv' to show

tests/test_load.py:36: AssertionError
----------------------------- Captured stdout call -----------------------------
MN_assembly_8U8W.006
Error The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute vdw_radii from <bpy_struct, Object("8U8W.006") at 0x63e936ea3318>
_______________________ test_style_2[True-8U8W-surface] ________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90f03460>
assembly = True, code = '8U8W', style = 'surface'

    @pytest.mark.parametrize("assembly, code, style", itertools.product([True], codes, ['cartoon', 'surface', 'ribbon']))
    def test_style_2(snapshot, assembly, code, style):
>       useful_function(snapshot, style, code, assembly, cache_dir=temp_dir)

tests/test_load.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90f03460>
style = 'surface', code = '8U8W', assembly = True
cache_dir = '/tmp/tmphha5xei9'

    def useful_function(snapshot, style, code, assembly, cache_dir=None):
        obj = mn.io.fetch(
            code,
            style=style,
            build_assembly=assembly,
            cache_dir=cache_dir
        ).object
        node = mn.blender.nodes.get_style_node(obj)
    
        if 'EEVEE' in node.inputs.keys():
            node.inputs['EEVEE'].default_value = True
    
        mn.blender.nodes.realize_instances(obj)
        dont_realise = style == 'cartoon' and code == '1BNA'
        for att in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(obj, att, evaluate=dont_realise),
                f"{att}.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_load/test_style_2/True-8U8W-surface/vdw_radii.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == '[0.017 0.017... 0.017 0.017]'
E             
E             + The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             - [0.017 0.017 0.017 0.017 0.017 0.017 0.017 0.015 0.017 0.017 0.017 0.015
E             -  0.017 0.017 0.015 0.017 ...
E             
E             ...Full output truncated (8 lines hidden), use '-vv' to show

tests/test_load.py:36: AssertionError
----------------------------- Captured stdout call -----------------------------
MN_assembly_8U8W.007
Error The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute vdw_radii from <bpy_struct, Object("8U8W.007") at 0x63e938e1e478>
________________________ test_style_2[True-8U8W-ribbon] ________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90fd07c0>
assembly = True, code = '8U8W', style = 'ribbon'

    @pytest.mark.parametrize("assembly, code, style", itertools.product([True], codes, ['cartoon', 'surface', 'ribbon']))
    def test_style_2(snapshot, assembly, code, style):
>       useful_function(snapshot, style, code, assembly, cache_dir=temp_dir)

tests/test_load.py:51: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90fd07c0>
style = 'ribbon', code = '8U8W', assembly = True, cache_dir = '/tmp/tmphha5xei9'

    def useful_function(snapshot, style, code, assembly, cache_dir=None):
        obj = mn.io.fetch(
            code,
            style=style,
            build_assembly=assembly,
            cache_dir=cache_dir
        ).object
        node = mn.blender.nodes.get_style_node(obj)
    
        if 'EEVEE' in node.inputs.keys():
            node.inputs['EEVEE'].default_value = True
    
        mn.blender.nodes.realize_instances(obj)
        dont_realise = style == 'cartoon' and code == '1BNA'
        for att in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(obj, att, evaluate=dont_realise),
                f"{att}.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_load/test_style_2/True-8U8W-ribbon/vdw_radii.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...'sharp_face']" == '[0.017 0.017... 0.017 0.017]'
E             
E             + The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face']
E             - [0.017 0.017 0.017 0.017 0.017 0.017 0.017 0.015 0.017 0.017 0.017 0.015
E             -  0.017 0.017 0.015 0.017 ...
E             
E             ...Full output truncated (8 lines hidden), use '-vv' to show

tests/test_load.py:36: AssertionError
----------------------------- Captured stdout call -----------------------------
MN_assembly_8U8W.008
Error The selected attribute 'vdw_radii' does not exist on the mesh.             Possible attributes are: attribute_names=['b_factor', 'occupancy', 'mass', 'lipophobicity', 'charge', 'res_id', 'res_name', 'atomic_number', 'chain_id', 'entity_id', 'atom_id', 'atom_name', 'sec_struct', 'Color', 'position', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_solvent', 'is_nucleic', 'is_peptide', 'is_hetero', 'is_carb', 'bond_type', '.edge_verts', '.select_edge', 'sharp_face'], unable to sample attribute vdw_radii from <bpy_struct, Object("8U8W.008") at 0x63e938f40a28>
_______________________ test_download_format[4ozs-mmtf] ________________________

code = '4ozs', format = 'mmtf'

    @pytest.mark.parametrize("code, format", itertools.product(codes, ['mmtf', 'cif', 'pdb']))
    def test_download_format(code, format):
        mol = mn.io.fetch(code, format=format, style=None).object
        scene = bpy.context.scene
        scene.MN_pdb_code = code
        scene.MN_import_node_setup = False
        scene.MN_import_format_download = format
        names = [o.name for o in bpy.data.objects]
>       bpy.ops.mn.import_wwpdb()

tests/test_load.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
________________________ test_download_format[4ozs-cif] ________________________

code = '4ozs', format = 'cif'

    @pytest.mark.parametrize("code, format", itertools.product(codes, ['mmtf', 'cif', 'pdb']))
    def test_download_format(code, format):
        mol = mn.io.fetch(code, format=format, style=None).object
        scene = bpy.context.scene
        scene.MN_pdb_code = code
        scene.MN_import_node_setup = False
        scene.MN_import_format_download = format
        names = [o.name for o in bpy.data.objects]
>       bpy.ops.mn.import_wwpdb()

tests/test_load.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
________________________ test_download_format[4ozs-pdb] ________________________

code = '4ozs', format = 'pdb'

    @pytest.mark.parametrize("code, format", itertools.product(codes, ['mmtf', 'cif', 'pdb']))
    def test_download_format(code, format):
        mol = mn.io.fetch(code, format=format, style=None).object
        scene = bpy.context.scene
        scene.MN_pdb_code = code
        scene.MN_import_node_setup = False
        scene.MN_import_format_download = format
        names = [o.name for o in bpy.data.objects]
>       bpy.ops.mn.import_wwpdb()

tests/test_load.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
_______________________ test_download_format[8H1B-mmtf] ________________________

code = '8H1B', format = 'mmtf'

    @pytest.mark.parametrize("code, format", itertools.product(codes, ['mmtf', 'cif', 'pdb']))
    def test_download_format(code, format):
        mol = mn.io.fetch(code, format=format, style=None).object
        scene = bpy.context.scene
        scene.MN_pdb_code = code
        scene.MN_import_node_setup = False
        scene.MN_import_format_download = format
        names = [o.name for o in bpy.data.objects]
>       bpy.ops.mn.import_wwpdb()

tests/test_load.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
________________________ test_download_format[8H1B-cif] ________________________

code = '8H1B', format = 'cif'

    @pytest.mark.parametrize("code, format", itertools.product(codes, ['mmtf', 'cif', 'pdb']))
    def test_download_format(code, format):
        mol = mn.io.fetch(code, format=format, style=None).object
        scene = bpy.context.scene
        scene.MN_pdb_code = code
        scene.MN_import_node_setup = False
        scene.MN_import_format_download = format
        names = [o.name for o in bpy.data.objects]
>       bpy.ops.mn.import_wwpdb()

tests/test_load.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
________________________ test_download_format[8H1B-pdb] ________________________

code = '8H1B', format = 'pdb'

    @pytest.mark.parametrize("code, format", itertools.product(codes, ['mmtf', 'cif', 'pdb']))
    def test_download_format(code, format):
        mol = mn.io.fetch(code, format=format, style=None).object
        scene = bpy.context.scene
        scene.MN_pdb_code = code
        scene.MN_import_node_setup = False
        scene.MN_import_format_download = format
        names = [o.name for o in bpy.data.objects]
>       bpy.ops.mn.import_wwpdb()

tests/test_load.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
_______________________ test_download_format[1BNA-mmtf] ________________________

code = '1BNA', format = 'mmtf'

    @pytest.mark.parametrize("code, format", itertools.product(codes, ['mmtf', 'cif', 'pdb']))
    def test_download_format(code, format):
        mol = mn.io.fetch(code, format=format, style=None).object
        scene = bpy.context.scene
        scene.MN_pdb_code = code
        scene.MN_import_node_setup = False
        scene.MN_import_format_download = format
        names = [o.name for o in bpy.data.objects]
>       bpy.ops.mn.import_wwpdb()

tests/test_load.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
________________________ test_download_format[1BNA-cif] ________________________

code = '1BNA', format = 'cif'

    @pytest.mark.parametrize("code, format", itertools.product(codes, ['mmtf', 'cif', 'pdb']))
    def test_download_format(code, format):
        mol = mn.io.fetch(code, format=format, style=None).object
        scene = bpy.context.scene
        scene.MN_pdb_code = code
        scene.MN_import_node_setup = False
        scene.MN_import_format_download = format
        names = [o.name for o in bpy.data.objects]
>       bpy.ops.mn.import_wwpdb()

tests/test_load.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
________________________ test_download_format[1BNA-pdb] ________________________

code = '1BNA', format = 'pdb'

    @pytest.mark.parametrize("code, format", itertools.product(codes, ['mmtf', 'cif', 'pdb']))
    def test_download_format(code, format):
        mol = mn.io.fetch(code, format=format, style=None).object
        scene = bpy.context.scene
        scene.MN_pdb_code = code
        scene.MN_import_node_setup = False
        scene.MN_import_format_download = format
        names = [o.name for o in bpy.data.objects]
>       bpy.ops.mn.import_wwpdb()

tests/test_load.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
_______________________ test_download_format[8U8W-mmtf] ________________________

code = '8U8W', format = 'mmtf'

    @pytest.mark.parametrize("code, format", itertools.product(codes, ['mmtf', 'cif', 'pdb']))
    def test_download_format(code, format):
        mol = mn.io.fetch(code, format=format, style=None).object
        scene = bpy.context.scene
        scene.MN_pdb_code = code
        scene.MN_import_node_setup = False
        scene.MN_import_format_download = format
        names = [o.name for o in bpy.data.objects]
>       bpy.ops.mn.import_wwpdb()

tests/test_load.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
________________________ test_download_format[8U8W-cif] ________________________

code = '8U8W', format = 'cif'

    @pytest.mark.parametrize("code, format", itertools.product(codes, ['mmtf', 'cif', 'pdb']))
    def test_download_format(code, format):
        mol = mn.io.fetch(code, format=format, style=None).object
        scene = bpy.context.scene
        scene.MN_pdb_code = code
        scene.MN_import_node_setup = False
        scene.MN_import_format_download = format
        names = [o.name for o in bpy.data.objects]
>       bpy.ops.mn.import_wwpdb()

tests/test_load.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
________________________ test_download_format[8U8W-pdb] ________________________

code = '8U8W', format = 'pdb'

    @pytest.mark.parametrize("code, format", itertools.product(codes, ['mmtf', 'cif', 'pdb']))
    def test_download_format(code, format):
        mol = mn.io.fetch(code, format=format, style=None).object
        scene = bpy.context.scene
        scene.MN_pdb_code = code
        scene.MN_import_node_setup = False
        scene.MN_import_format_download = format
        names = [o.name for o in bpy.data.objects]
>       bpy.ops.mn.import_wwpdb()

tests/test_load.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
______________________ test_style_positions[8U8W-surface] ______________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90ef4160>
code = '8U8W', style = 'surface'

    @pytest.mark.parametrize('code, style', itertools.product(codes, styles))
    def test_style_positions(snapshot, code, style):
        mol = mn.io.fetch(code, style=style).object
>       snapshot.assert_match(
            sample_attribute_to_string(
                mol, 'position', precision=3
            ),
            "position.txt"
        )
E       AssertionError: value does not match the expected value in snapshot tests/snapshots/test_load/test_style_positions/8U8W-surface/position.txt
E         (run pytest with --snapshot-update to update snapshots)
E       assert '[[-0.222  0.....043  0.191]]' == '[[-0.069 -0.....049  0.335]]'
E         
E         + [[-0.222  0.168  0.08 ]
E         - [[-0.069 -0.008  0.022]
E         -  [-0.445 -0.217  0.189]
E         -  [-0.178  0.036  0.281]
E         ?      ^ ^     ^      ^^
E         +  [-0.279  0.056  0.232]...
E         
E         ...Full output truncated (236 lines hidden), use '-vv' to show

tests/test_load.py:75: AssertionError
_______________________ test_martini[pent/prot_ion.tpr] ________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90f03ee0>
toplogy = 'pent/prot_ion.tpr'

    @pytest.mark.parametrize("toplogy", ["pent/prot_ion.tpr", "pent/TOPOL2.pdb"])
    def test_martini(snapshot, toplogy):
        session = mn.io.MDAnalysisSession()
        remove_all_molecule_objects(session)
        universe = mda.Universe(
            data_dir / "martini" / toplogy,
            data_dir / "martini/pent/PENT2_100frames.xtc"
        )
    
        mol = session.show(universe, style="ribbon")
    
        pos_a = sample_attribute(mol, 'position')
        bpy.context.scene.frame_set(3)
        pos_b = sample_attribute(mol, 'position')
    
        assert not np.isclose(pos_a, pos_b).all()
    
        for att in mol.data.attributes.keys():
>           snapshot.assert_match(
                sample_attribute(mol, att, as_string=True),
                f"mesh_att_{att}_values.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_mda/test_martini/pentprot_ion.tpr/mesh_att_vdw_radii_values.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert '[0.018 0.018... 0.019 0.019]' == '[0.02  0.02 ... 0.025 0.025]'
E             
E             - [0.02  0.02  0.025 0.02  0.025 0.025 0.025 0.02  0.025 0.025 0.025 0.025
E             -  0.02  0.025 0.025 0.02  0.02  0.025 0.02  0.025 0.02  0.025 0.025 0.025
E             -  0.025 0.025 0.025 0.025 0.02  0.025 0.025 0.025 0.02  0.02  0.02  0.02
E             -  0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.025 0.02  0.025
E             -  0.025 0.025 0.02  0.02  0.025 0.02  0.025 0.02  0.025 0.02  0.02  0.02
E             -  0.02  0.025 0.02  0.025 0.025 0.02  0.02  0.02  0.02  0.025 0.02  0.025...
E             
E             ...Full output truncated (12 lines hidden), use '-vv' to show

tests/test_mda.py:376: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py", line 883, in update_trajectory_handler
    self._update_trajectory(frame)
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py", line 810, in _update_trajectory
    subframes = bpy.data.objects[rep_name].mn['subframes']
KeyError: 'bpy_prop_collection[key]: key "atoms" not found'
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py", line 883, in update_trajectory_handler
    self._update_trajectory(frame)
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py", line 810, in _update_trajectory
    subframes = bpy.data.objects[rep_name].mn['subframes']
KeyError: 'bpy_prop_collection[key]: key "atoms" not found'
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py", line 883, in update_trajectory_handler
    self._update_trajectory(frame)
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py", line 873, in _update_trajectory
    obj.set_attribute(mol_object, 'position', locations)
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/blender/obj.py", line 140, in set_attribute
    raise AttributeMismatchError(
molecularnodes.blender.obj.AttributeMismatchError: Data length 10273, dimensions (10273, 3) does not equal the size of the target domain POINT, len=len(attribute.data)=11350
------------------------------ Captured log call -------------------------------
WARNING  root:mda.py:441 The existing mda session is loaded.
________________________ test_martini[pent/TOPOL2.pdb] _________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90febc70>
toplogy = 'pent/TOPOL2.pdb'

    @pytest.mark.parametrize("toplogy", ["pent/prot_ion.tpr", "pent/TOPOL2.pdb"])
    def test_martini(snapshot, toplogy):
        session = mn.io.MDAnalysisSession()
        remove_all_molecule_objects(session)
        universe = mda.Universe(
            data_dir / "martini" / toplogy,
            data_dir / "martini/pent/PENT2_100frames.xtc"
        )
    
        mol = session.show(universe, style="ribbon")
    
        pos_a = sample_attribute(mol, 'position')
        bpy.context.scene.frame_set(3)
        pos_b = sample_attribute(mol, 'position')
    
        assert not np.isclose(pos_a, pos_b).all()
    
        for att in mol.data.attributes.keys():
>           snapshot.assert_match(
                sample_attribute(mol, att, as_string=True),
                f"mesh_att_{att}_values.txt"
            )
E           AssertionError: snapshot tests/snapshots/test_mda/test_martini/pentTOPOL2.pdb/mesh_att_mass_values.txt doesn't exist. (run pytest with --snapshot-update to create it)

tests/test_mda.py:376: AssertionError
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py", line 883, in update_trajectory_handler
    self._update_trajectory(frame)
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py", line 810, in _update_trajectory
    subframes = bpy.data.objects[rep_name].mn['subframes']
KeyError: 'bpy_prop_collection[key]: key "atoms" not found'
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py", line 883, in update_trajectory_handler
    self._update_trajectory(frame)
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py", line 810, in _update_trajectory
    subframes = bpy.data.objects[rep_name].mn['subframes']
KeyError: 'bpy_prop_collection[key]: key "atoms" not found'
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py", line 883, in update_trajectory_handler
    self._update_trajectory(frame)
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py", line 873, in _update_trajectory
    obj.set_attribute(mol_object, 'position', locations)
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/blender/obj.py", line 140, in set_attribute
    raise AttributeMismatchError(
molecularnodes.blender.obj.AttributeMismatchError: Data length 10273, dimensions (10273, 3) does not equal the size of the target domain POINT, len=len(attribute.data)=11350
------------------------------ Captured log call -------------------------------
WARNING  root:mda.py:441 The existing mda session is loaded.
________________________ test_load[ball_and_stick-mol] _________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90fe9f90>
format = 'mol', style = 'ball_and_stick'

    @pytest.mark.parametrize("format", formats)
    @pytest.mark.parametrize("style", ['ball_and_stick', 'spheres', 'surface'])
    def test_load(snapshot, format, style):
        mol = mn.io.load(data_dir / f'caffeine.{format}', style=style)
        assert mol.object
    
        if style == 'spheres':
            bl.nodes.get_style_node(
                mol.object).inputs['EEVEE'].default_value = True
        mn.blender.nodes.realize_instances(mol.object)
    
        for attribute in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(
                    bl.obj.evaluated(mol.object), attribute),
                f"{attribute}.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_mol_sdf/test_load/ball_and_stick-mol/b_factor.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...ge', 'Color']" == "The selected...ge', 'Color']"
E             
E             - The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['lipophobicity', 'charge', 'vdw_radii', 'bond_type', 'atomic_number', 'chain_id', 'atom_name', 'res_name', 'res_id', 'position', 'is_hetero', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_peptide', 'is_nucleic', '.select_edge', 'is_solvent', 'is_carb', '.edge_verts', 'material_index', '.corner_vert', '.corner_edge', 'Color']
E             ?                                                                                                                           ...
E             
E             ...Full output truncated (3 lines hidden), use '-vv' to show

tests/test_mol_sdf.py:36: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['lipophobicity', 'charge', 'mass', 'vdw_radii', 'bond_type', 'atomic_number', 'res_name', 'chain_id', 'atom_name', 'res_id', 'position', 'is_hetero', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_peptide', 'is_nucleic', '.select_edge', 'is_solvent', 'is_carb', '.edge_verts', 'material_index', '.corner_vert', '.corner_edge', 'Color'], unable to sample attribute b_factor from <bpy_struct, Object("Name") at 0x63e938ceb9f8, evaluated>
________________________ test_load[ball_and_stick-sdf] _________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd93178550>
format = 'sdf', style = 'ball_and_stick'

    @pytest.mark.parametrize("format", formats)
    @pytest.mark.parametrize("style", ['ball_and_stick', 'spheres', 'surface'])
    def test_load(snapshot, format, style):
        mol = mn.io.load(data_dir / f'caffeine.{format}', style=style)
        assert mol.object
    
        if style == 'spheres':
            bl.nodes.get_style_node(
                mol.object).inputs['EEVEE'].default_value = True
        mn.blender.nodes.realize_instances(mol.object)
    
        for attribute in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(
                    bl.obj.evaluated(mol.object), attribute),
                f"{attribute}.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_mol_sdf/test_load/ball_and_stick-sdf/b_factor.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...ge', 'Color']" == "The selected...ge', 'Color']"
E             
E             - The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['lipophobicity', 'charge', 'vdw_radii', 'bond_type', 'atomic_number', 'chain_id', 'atom_name', 'res_name', 'res_id', 'position', 'is_hetero', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_peptide', 'is_nucleic', '.select_edge', 'is_solvent', 'is_carb', '.edge_verts', 'material_index', '.corner_vert', '.corner_edge', 'Color']
E             ?                                                                                                                           ...
E             
E             ...Full output truncated (3 lines hidden), use '-vv' to show

tests/test_mol_sdf.py:36: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['lipophobicity', 'charge', 'mass', 'vdw_radii', 'bond_type', 'atomic_number', 'res_name', 'chain_id', 'atom_name', 'res_id', 'position', 'is_hetero', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_peptide', 'is_nucleic', '.select_edge', 'is_solvent', 'is_carb', '.edge_verts', 'material_index', '.corner_vert', '.corner_edge', 'Color'], unable to sample attribute b_factor from <bpy_struct, Object("Name.001") at 0x63e9397f01c8, evaluated>
____________________________ test_load[spheres-mol] ____________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90ed83a0>
format = 'mol', style = 'spheres'

    @pytest.mark.parametrize("format", formats)
    @pytest.mark.parametrize("style", ['ball_and_stick', 'spheres', 'surface'])
    def test_load(snapshot, format, style):
        mol = mn.io.load(data_dir / f'caffeine.{format}', style=style)
        assert mol.object
    
        if style == 'spheres':
            bl.nodes.get_style_node(
                mol.object).inputs['EEVEE'].default_value = True
        mn.blender.nodes.realize_instances(mol.object)
    
        for attribute in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(
                    bl.obj.evaluated(mol.object), attribute),
                f"{attribute}.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_mol_sdf/test_load/spheres-mol/b_factor.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...corner_edge']" == "The selected...corner_edge']"
E             
E             - The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['lipophobicity', 'charge', 'vdw_radii', 'bond_type', 'atomic_number', 'res_name', 'chain_id', 'atom_name', 'res_id', 'Color', 'position', 'is_hetero', 'is_peptide', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_nucleic', '.select_edge', 'is_solvent', 'is_carb', '.edge_verts', 'material_index', '.corner_vert', '.corner_edge']
E             + The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['lipop...
E             
E             ...Full output truncated (2 lines hidden), use '-vv' to show

tests/test_mol_sdf.py:36: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['lipophobicity', 'charge', 'mass', 'vdw_radii', 'bond_type', 'atomic_number', 'res_name', 'chain_id', 'atom_name', 'res_id', 'Color', 'position', 'is_hetero', 'is_peptide', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_nucleic', '.select_edge', 'is_solvent', 'is_carb', '.edge_verts', 'material_index', '.corner_vert', '.corner_edge'], unable to sample attribute b_factor from <bpy_struct, Object("Name.002") at 0x63e9407491f8, evaluated>
____________________________ test_load[spheres-sdf] ____________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd9317bc10>
format = 'sdf', style = 'spheres'

    @pytest.mark.parametrize("format", formats)
    @pytest.mark.parametrize("style", ['ball_and_stick', 'spheres', 'surface'])
    def test_load(snapshot, format, style):
        mol = mn.io.load(data_dir / f'caffeine.{format}', style=style)
        assert mol.object
    
        if style == 'spheres':
            bl.nodes.get_style_node(
                mol.object).inputs['EEVEE'].default_value = True
        mn.blender.nodes.realize_instances(mol.object)
    
        for attribute in attributes:
>           snapshot.assert_match(
                sample_attribute_to_string(
                    bl.obj.evaluated(mol.object), attribute),
                f"{attribute}.txt"
            )
E           AssertionError: value does not match the expected value in snapshot tests/snapshots/test_mol_sdf/test_load/spheres-sdf/b_factor.txt
E             (run pytest with --snapshot-update to update snapshots)
E           assert "The selected...corner_edge']" == "The selected...corner_edge']"
E             
E             - The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['lipophobicity', 'charge', 'vdw_radii', 'bond_type', 'atomic_number', 'res_name', 'chain_id', 'atom_name', 'res_id', 'Color', 'position', 'is_hetero', 'is_peptide', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_nucleic', '.select_edge', 'is_solvent', 'is_carb', '.edge_verts', 'material_index', '.corner_vert', '.corner_edge']
E             + The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['lipop...
E             
E             ...Full output truncated (2 lines hidden), use '-vv' to show

tests/test_mol_sdf.py:36: AssertionError
----------------------------- Captured stdout call -----------------------------
Error The selected attribute 'b_factor' does not exist on the mesh.             Possible attributes are: attribute_names=['lipophobicity', 'charge', 'mass', 'vdw_radii', 'bond_type', 'atomic_number', 'res_name', 'chain_id', 'atom_name', 'res_id', 'Color', 'position', 'is_hetero', 'is_peptide', '.select_vert', 'is_backbone', 'is_alpha_carbon', 'is_nucleic', '.select_edge', 'is_solvent', 'is_carb', '.edge_verts', 'material_index', '.corner_vert', '.corner_edge'], unable to sample attribute b_factor from <bpy_struct, Object("Name.003") at 0x63e936127c58, evaluated>
__________________________ test_op_api_cartoon[4ozs] ___________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90f00040>
code = '4ozs', style = 'ribbon', format = 'mmtf'

    @pytest.mark.parametrize("code", codes)
    def test_op_api_cartoon(snapshot, code, style='ribbon', format="mmtf"):
        scene = bpy.context.scene
        scene.MN_import_node_setup = True
        scene.MN_pdb_code = code
        scene.MN_import_style = style
        scene.MN_import_node_setup = True
        scene.MN_import_build_assembly = False
        scene.MN_import_centre = False
        scene.MN_import_del_solvent = False
        scene.MN_import_format_download = format
    
>       bpy.ops.mn.import_wwpdb()

tests/test_ops.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Read blend: "/tmp/pytest-of-russ/pytest-1/test_save_persistance_True_0/test.blend"
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
__________________________ test_op_api_cartoon[8H1B] ___________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fdabdbf580>
code = '8H1B', style = 'ribbon', format = 'mmtf'

    @pytest.mark.parametrize("code", codes)
    def test_op_api_cartoon(snapshot, code, style='ribbon', format="mmtf"):
        scene = bpy.context.scene
        scene.MN_import_node_setup = True
        scene.MN_pdb_code = code
        scene.MN_import_style = style
        scene.MN_import_node_setup = True
        scene.MN_import_build_assembly = False
        scene.MN_import_centre = False
        scene.MN_import_del_solvent = False
        scene.MN_import_format_download = format
    
>       bpy.ops.mn.import_wwpdb()

tests/test_ops.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
__________________________ test_op_api_cartoon[1BNA] ___________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd9317a5c0>
code = '1BNA', style = 'ribbon', format = 'mmtf'

    @pytest.mark.parametrize("code", codes)
    def test_op_api_cartoon(snapshot, code, style='ribbon', format="mmtf"):
        scene = bpy.context.scene
        scene.MN_import_node_setup = True
        scene.MN_pdb_code = code
        scene.MN_import_style = style
        scene.MN_import_node_setup = True
        scene.MN_import_build_assembly = False
        scene.MN_import_centre = False
        scene.MN_import_del_solvent = False
        scene.MN_import_format_download = format
    
>       bpy.ops.mn.import_wwpdb()

tests/test_ops.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
__________________________ test_op_api_cartoon[8U8W] ___________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90ed9180>
code = '8U8W', style = 'ribbon', format = 'mmtf'

    @pytest.mark.parametrize("code", codes)
    def test_op_api_cartoon(snapshot, code, style='ribbon', format="mmtf"):
        scene = bpy.context.scene
        scene.MN_import_node_setup = True
        scene.MN_pdb_code = code
        scene.MN_import_style = style
        scene.MN_import_node_setup = True
        scene.MN_import_build_assembly = False
        scene.MN_import_centre = False
        scene.MN_import_del_solvent = False
        scene.MN_import_format_download = format
    
>       bpy.ops.mn.import_wwpdb()

tests/test_ops.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = bpy.ops.mn.import_wwpdb(), args = (), kw = {}
bpy = <module 'bpy' from '/home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/__init__.so'>
context = <bpy_struct, Context at 0x63e93024edf8>
wm = bpy.data.window_managers['WinMan']

    def __call__(self, *args, **kw):
        import bpy
        context = bpy.context
    
        # Get the operator from blender
        wm = context.window_manager
    
        # Run to account for any RNA values the user changes.
        # NOTE: We only update active view-layer, since that's what
        # operators are supposed to operate on. There might be some
        # corner cases when operator need a full scene update though.
        _BPyOpsSubModOp._view_layer_update(context)
    
        if args:
            C_exec, C_undo = _BPyOpsSubModOp._parse_args(args)
            ret = _op_call(self.idname_py(), kw, C_exec, C_undo)
        else:
>           ret = _op_call(self.idname_py(), kw)
E           RuntimeError: Error: Python: Traceback (most recent call last):
E             File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
E               centre_type=scene.MN_centre_type,
E           AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
E           Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109

../../../Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109: RuntimeError
----------------------------- Captured stdout call -----------------------------
Error: Python: Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
Location: /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/bpy/4.0/scripts/modules/bpy/ops.py:109
----------------------------- Captured stderr call -----------------------------
Traceback (most recent call last):
  File "/home/russ/Scripts/git/MolecularNodes/molecularnodes/io/wwpdb.py", line 100, in execute
    centre_type=scene.MN_centre_type,
AttributeError: 'Scene' object has no attribute 'MN_centre_type'. Did you mean: 'MN_center_type'?
_______________________________ test_op_api_mda ________________________________

snapshot = <pytest_snapshot.plugin.Snapshot object at 0x74fd90eb9420>

    def test_op_api_mda(snapshot):
        topo = str(data_dir / "md_ppr/box.gro")
        traj = str(data_dir / "md_ppr/first_5_frames.xtc")
        name = bpy.context.scene.MN_import_md_name
    
        bpy.context.scene.MN_import_md_topology = topo
        bpy.context.scene.MN_import_md_trajectory = traj
        bpy.context.scene.MN_import_style = 'ribbon'
    
        bpy.ops.mn.import_protein_md()
        obj_1 = bpy.context.active_object
        assert obj_1.name == name
        assert not bpy.data.collections.get(f"{name}_frames")
    
        bpy.context.scene.MN_md_in_memory = True
        name = 'NewTrajectoryInMemory'
    
        obj_2, universe = mn.io.md.load(topo, traj, name="test", style='ribbon')
        frames_coll = bpy.data.collections.get(f"{obj_2.name}_frames")
    
        assert not frames_coll
    
        for mol in [obj_1, obj_2]:
            for att in mol.data.attributes.keys():
>               snapshot.assert_match(
                    sample_attribute_to_string(mol, att),
                    f"{att}.txt"
                )
E               AssertionError: snapshot tests/snapshots/test_ops/test_op_api_mda/mass.txt doesn't exist. (run pytest with --snapshot-update to create it)

tests/test_ops.py:73: AssertionError
----------------------------- Captured stdout call -----------------------------
Info: Imported '/home/russ/Scripts/git/MolecularNodes/tests/data/md_ppr/box.gro' as NewTrajectory with 5 frames from '/home/russ/Scripts/git/MolecularNodes/tests/data/md_ppr/first_5_frames.xtc'.
------------------------------ Captured log call -------------------------------
WARNING  root:mda.py:441 The existing mda session is loaded.
WARNING  root:mda.py:441 The existing mda session is loaded.
=============================== warnings summary ===============================
tests/test_attributes.py::test_attribute[1BNA-cif]
tests/test_cellpack.py::test_load_cellpack[cif]
tests/test_load.py::test_download_format[1BNA-cif]
tests/test_nodes.py::test_selection_working[chain_id-cif-1BNA]
tests/test_nodes.py::test_selection_working[entity_id-cif-1BNA]
tests/test_nodes.py::test_color_custom[chain_id-cif-1BNA]
tests/test_nodes.py::test_color_custom[entity_id-cif-1BNA]
  /home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/cif.py:42: UserWarning: No secondary structure information.
    warnings.warn('No secondary structure information.')

tests/test_cellpack.py::test_load_cellpack[cif]
  /home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/cif.py:47: UserWarning: Non entity_id information.
    warnings.warn('Non entity_id information.')

tests/test_mda.py::TestMDA::test_trajectory_update[False]
tests/test_mda.py::TestMDA::test_trajectory_update[True]
tests/test_mda.py::TestMDA_FrameMapping::test_persistent_handlers_added
tests/test_mda.py::test_martini[pent/prot_ion.tpr]
tests/test_mda.py::test_martini[pent/TOPOL2.pdb]
tests/test_ops.py::test_op_api_mda
tests/test_ops.py::test_op_api_mda
  /home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py:440: UserWarning: The existing mda session is loaded.
    warnings.warn("The existing mda session is loaded.")

tests/test_mda.py::TestMDA::test_trajectory_update[False]
  /home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py:777: UserWarning: The name of the object is changed to atoms.001 because atoms is already used.
    warnings.warn(

tests/test_mda.py::TestMDA::test_trajectory_update[True]
  /home/russ/Scripts/git/MolecularNodes/molecularnodes/io/parse/mda.py:777: UserWarning: The name of the object is changed to atoms.002 because atoms is already used.
    warnings.warn(

tests/test_star.py::test_starfile_attributes[cistem]
tests/test_star.py::test_starfile_attributes[cistem]
tests/test_star.py::test_starfile_attributes[relion]
tests/test_star.py::test_starfile_attributes[relion]
tests/test_star.py::test_starfile_attributes[relion]
tests/test_star.py::test_starfile_attributes[relion]
  /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/starfile/parser.py:106: FutureWarning: The 'delim_whitespace' keyword in pd.read_csv is deprecated and will be removed in a future version. Use ``sep='\s+'`` instead
    df = pd.read_csv(

tests/test_star.py::test_starfile_attributes[cistem]
tests/test_star.py::test_starfile_attributes[cistem]
tests/test_star.py::test_starfile_attributes[relion]
tests/test_star.py::test_starfile_attributes[relion]
tests/test_star.py::test_starfile_attributes[relion]
tests/test_star.py::test_starfile_attributes[relion]
  /home/russ/Apps/anaconda3/envs/molecularnodes/lib/python3.10/site-packages/starfile/parser.py:113: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
    df_numeric = df.apply(pd.to_numeric, errors='ignore')

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/test_attributes.py::test_attribute[4ozs-pdb] - AssertionError: v...
FAILED tests/test_attributes.py::test_attribute[4ozs-cif] - AssertionError: v...
FAILED tests/test_attributes.py::test_attribute[8H1B-pdb] - AssertionError: v...
FAILED tests/test_attributes.py::test_attribute[8H1B-cif] - AssertionError: v...
FAILED tests/test_attributes.py::test_attribute[1BNA-pdb] - AssertionError: v...
FAILED tests/test_attributes.py::test_attribute[1BNA-cif] - AssertionError: v...
FAILED tests/test_attributes.py::test_attribute[8U8W-pdb] - AssertionError: v...
FAILED tests/test_attributes.py::test_attribute[8U8W-mmtf] - AssertionError: ...
FAILED tests/test_attributes.py::test_attribute[8U8W-cif] - AssertionError: v...
FAILED tests/test_load.py::test_style_1[False-8U8W-preset_1] - AssertionError...
FAILED tests/test_load.py::test_style_1[False-8U8W-cartoon] - AssertionError:...
FAILED tests/test_load.py::test_style_1[False-8U8W-ribbon] - AssertionError: ...
FAILED tests/test_load.py::test_style_1[False-8U8W-spheres] - AssertionError:...
FAILED tests/test_load.py::test_style_1[False-8U8W-surface] - AssertionError:...
FAILED tests/test_load.py::test_style_1[False-8U8W-ball_and_stick] - Assertio...
FAILED tests/test_load.py::test_style_2[True-8U8W-cartoon] - AssertionError: ...
FAILED tests/test_load.py::test_style_2[True-8U8W-surface] - AssertionError: ...
FAILED tests/test_load.py::test_style_2[True-8U8W-ribbon] - AssertionError: v...
FAILED tests/test_load.py::test_download_format[4ozs-mmtf] - RuntimeError: Er...
FAILED tests/test_load.py::test_download_format[4ozs-cif] - RuntimeError: Err...
FAILED tests/test_load.py::test_download_format[4ozs-pdb] - RuntimeError: Err...
FAILED tests/test_load.py::test_download_format[8H1B-mmtf] - RuntimeError: Er...
FAILED tests/test_load.py::test_download_format[8H1B-cif] - RuntimeError: Err...
FAILED tests/test_load.py::test_download_format[8H1B-pdb] - RuntimeError: Err...
FAILED tests/test_load.py::test_download_format[1BNA-mmtf] - RuntimeError: Er...
FAILED tests/test_load.py::test_download_format[1BNA-cif] - RuntimeError: Err...
FAILED tests/test_load.py::test_download_format[1BNA-pdb] - RuntimeError: Err...
FAILED tests/test_load.py::test_download_format[8U8W-mmtf] - RuntimeError: Er...
FAILED tests/test_load.py::test_download_format[8U8W-cif] - RuntimeError: Err...
FAILED tests/test_load.py::test_download_format[8U8W-pdb] - RuntimeError: Err...
FAILED tests/test_load.py::test_style_positions[8U8W-surface] - AssertionErro...
FAILED tests/test_mda.py::test_martini[pent/prot_ion.tpr] - AssertionError: v...
FAILED tests/test_mda.py::test_martini[pent/TOPOL2.pdb] - AssertionError: sna...
FAILED tests/test_mol_sdf.py::test_load[ball_and_stick-mol] - AssertionError:...
FAILED tests/test_mol_sdf.py::test_load[ball_and_stick-sdf] - AssertionError:...
FAILED tests/test_mol_sdf.py::test_load[spheres-mol] - AssertionError: value ...
FAILED tests/test_mol_sdf.py::test_load[spheres-sdf] - AssertionError: value ...
FAILED tests/test_ops.py::test_op_api_cartoon[4ozs] - RuntimeError: Error: Py...
FAILED tests/test_ops.py::test_op_api_cartoon[8H1B] - RuntimeError: Error: Py...
FAILED tests/test_ops.py::test_op_api_cartoon[1BNA] - RuntimeError: Error: Py...
FAILED tests/test_ops.py::test_op_api_cartoon[8U8W] - RuntimeError: Error: Py...
FAILED tests/test_ops.py::test_op_api_mda - AssertionError: snapshot tests/sn...
====== 42 failed, 202 passed, 2 skipped, 29 warnings in 128.89s (0:02:08) ======
Error: Not freed memory blocks: 34704, total unfreed memory 13.540264 MB
